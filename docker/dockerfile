# Fetch a legacy version matching the Jetpack version.
FROM nvcr.io/nvidia/l4t-base:r32.3.1
LABEL maintainer="Jayoung Lee(lee3716@purdue.edu)"

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# Needed to install tex
ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update

# Install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    curl \
    git \
    gstreamer1.0-plugins-bad \
    gstreamer1.0-plugins-good \
    gstreamer1.0-plugins-ugly \
    gstreamer1.0-vaapi \
    libavcodec-dev \
    libavformat-dev \
    libgstreamer-plugins-base1.0-dev \
    libgstreamer1.0-dev \
    libsm6 \
    libswscale-dev \
    libxext6 \
    libxrender-dev \
    libfreetype6-dev \
    libhdf5-serial-dev \
    libzmq3-dev \
    libtiff5-dev \
    openmpi-bin \
    mesa-va-drivers \
    libpng-dev \
    libjpeg-dev \
    libswscale-dev \
    pkg-config \
    software-properties-common \
    python3-dev

RUN apt-get install -y wget && rm -rf /var/lib/apt/lists/*

# Install conda
RUN wget https://github.com/jjhelmus/conda4aarch64/releases/download/1.0.0/c4aarch64_installer-1.0.0-Linux-aarch64.sh \
    && mkdir /root/.conda \
    && bash c4aarch64_installer-1.0.0-Linux-aarch64.sh -b

RUN rm -f c4aarch64_installer-1.0.0-Linux-aarch64.sh

# A workaround to get conda working
RUN ln -s /root/c4aarch64_installer/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /root/c4aarch64_installer/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate base" >> ~/.bashrc

RUN . /root/c4aarch64_installer/etc/profile.d/conda.sh && \
    conda config --add channels c4aarch64 && \
    conda config --add channels conda-forge && \
    conda create -n ae python=3.6 -c conda-forge

ENV PATH /root/c4aarch64_installer/envs/ae/bin:$PATH

RUN . /root/c4aarch64_installer/etc/profile.d/conda.sh && \
    conda activate ae && \
    conda install pip=19.0 && \
    conda install tqdm

RUN . /root/c4aarch64_installer/etc/profile.d/conda.sh && \
    conda activate ae && \
    conda install -c numba numba=0.46.0 && \
    conda install h5py==2.10.0 scikit-learn==0.21.3

RUN . /root/c4aarch64_installer/etc/profile.d/conda.sh && \
    conda activate ae && \
    pip install numpy==1.16.4 termcolor tensorboard==1.14.0 tensorflow-estimator==1.14.0 future==0.17.1 mock==3.0.5 keras_preprocessing==1.0.5 keras_applications==1.0.8 gast==0.2.2 futures protobuf pybind11


# Note that the url is Jetpack specific.
RUN . /root/c4aarch64_installer/etc/profile.d/conda.sh && \
    conda activate ae && \
    pip install --pre --extra-index-url https://developer.download.nvidia.com/compute/redist/jp/v43 tensorflow-gpu==1.15.0+nv19.12 && \
    pip install gdown

RUN wget https://nvidia.box.com/shared/static/ncgzus5o23uck9i5oth2n8n06k340l6k.whl -O torch-1.4.0-cp36-cp36m-linux_aarch64.whl

RUN . /root/c4aarch64_installer/etc/profile.d/conda.sh && \
    conda activate ae && \
    pip install torch-1.4.0-cp36-cp36m-linux_aarch64.whl

RUN git clone --branch v0.5.0 https://github.com/pytorch/vision torchvision

RUN echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/targets/aarch64-linux/lib/" >> ~/.bashrc

# Torchvision has to be configured after building is complete
# RUN . /root/c4aarch64_installer/etc/profile.d/conda.sh && \
#     conda activate ae && \
#     cd torchvision && \
#     python setup.py install && \
#     cd ..

RUN . /root/c4aarch64_installer/etc/profile.d/conda.sh && \
    conda activate ae && \
    conda install cmake && \
    pip install opencv-contrib-python=4.4.0.46

RUN git clone https://github.com/StarsThu2016/LiteReconfig_AE.git

RUN . /root/c4aarch64_installer/etc/profile.d/conda.sh && \
    conda activate ae && \
    cd LiteReconfig_AE && \
    gdown https://drive.google.com/uc?id=1rexa1JsWmREy_nOGzO-opeTDtVki2iP_ && \
    tar -xvf models.tar && rm models.tar

RUN mkdir ILSVRC2015
WORKDIR /LiteReconfig_AE
CMD ["/bin/bash"]